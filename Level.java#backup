import greenfoot.*;
import java.io.File;
import com.google.gson.*;
import java.util.*;

/**
 * Write a description of class Level here.
 * 
 * @author (your name) 
 * @version (a version number or a date)
 */
public class Level  
{
    private String path;
    private GraphicsManager graphics;
    private Map<String, String> levelInfo;
    // Start- und Speicherzustand des Levels
    private List<EntityData> levelData;
    // Aktueller Zustand des Levels
    private List<EntityData> entities; 
    
    public Level(String path)
    {        
        String fileContent = Tools.getFileContent(path);
                
        //graphics = new GraphicsManager();        
        
        // Dateiinhalt verarbeiten
        // Gson-Objekte erstellen
        Gson gson = new Gson();
        JsonParser parser = new JsonParser();
        
        // Levelinfo extrahieren
        levelInfo = new HashMap<String, String>();
        JsonObject levelInfoObject = parser.parse(fileContent)
                        .getAsJsonObject().getAsJsonObject("levelInfo");
        
        // Quelle: https://stackoverflow.com/questions/2779251/how-can-i-convert-json-to-a-hashmap-using-gson
        // Nutzer: Angel
        levelInfo = (Map<String, String>) 
                        gson.fromJson(levelInfoObject, levelInfo.getClass());
        //Tools.log(levelInfo.get("name"), "level");
        
        // Leveldata extrahieren
        String levelDataString = parser.parse(fileContent)
            .getAsJsonObject().getAsJsonArray("levelData").toString();
        //System.out.println(levelDataString);
        
        // Quelle: https://stackoverflow.com/questions/5554217/google-gson-deserialize-listclass-object-generic-type
        // Nutzer: DevNG
        EntityData[] entityArray = gson.fromJson(levelDataString, EntityData[].class);
        levelData = new ArrayList<>(Arrays.asList(entityArray));         
        
        generateEntities();
        
        //entities = levelData;
        //System.out.println(entities == levelData);
        //System.out.println(levelData.equals(entities));
    }
    
    private void generateEntities()
    {
        entities = new ArrayList<EntityData>();
        // entities aus levelData erzeugen
        
        for (EntityData entity: levelData)
        {
            // entity kopieren
            EntityData newEntity = new EntityData(entity);
            
            // Typ: spawnpoint VERALTET
            if (entity.getType().equals("spawnpoint"))
            {
                // Player an Spawnpunkt platzieren
                newEntity.setType("player");
                entities.add(newEntity);
            }
            else
            {
                entities.add(newEntity);
            }
        }        
        /*
        System.out.println(levelData.get(0).getType());
        System.out.println(entities.get(0).getType());
        System.out.println(levelData.get(0).equals(entities.get(0))); */
    }
    
    public List<EntityData> getEntities()
    {
        return entities;
    }
    
    public void update()
    {
        // in Entities nach Mario suchen
        EntityData mario = new EntityData();
        EntityData luigi = new EntityData();
        for (EntityData entity : entities)
        {
            if (entity.getName().equals("Mario"))
            {
                mario = entity;
            }
            if (entity.getName().equals("Luigi"))
            {
                luigi = entity;
            }
        }
        
        int speed = 1;
        
        if(Greenfoot.isKeyDown("w"))
        {
            mario.setY(mario.getY()+speed;
        }
        if(Greenfoot.isKeyDown("a"))
        {
            mario.setX(mario.getX()-speed);
        }
        if(Greenfoot.isKeyDown("s"))
        {
            mario.setY(mario.getY()-speed);
        }
        if(Greenfoot.isKeyDown("d"))
        {
            mario.setX(mario.getX()+speed);
        }
        
        
        if(Greenfoot.isKeyDown("up"))
        {
            luigi.setY(luigi.getY()+speed);
        }
        if(Greenfoot.isKeyDown("left"))
        {
            luigi.setX(luigi.getX()-speed);
        }
        if(Greenfoot.isKeyDown("down"))
        {
            luigi.setY(luigi.getY()-speed);
        }
        if(Greenfoot.isKeyDown("right"))
        {
            luigi.setX(luigi.getX()+speed);
        }
    }
}
